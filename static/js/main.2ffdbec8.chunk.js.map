{"version":3,"sources":["components/Footer/Footer.js","components/Header/Header.js","utils/index.js","components/Form/DepositWithdrawForm.js","components/Form/TransferForm.js","components/Account/Account.js","components/Button/index.js","components/Button/Create/Create.js","components/Form/NewAccountForm.js","App.js","reportWebVitals.js","index.js"],"names":["FooterComponent","Layout","Footer","style","textAlign","Title","Typography","HeaderComponent","Header","onConnectWallet","address","display","alignItems","justifyContent","level","color","margin","RocketFilled","className","type","shape","size","icon","WalletOutlined","onClick","title","fontSize","placement","fontWeight","slice","length","amountValidator","balance","_","value","currentAmount","Number","Promise","resolve","reject","DepositWithdrawForm","accountName","isModalVisible","handleOk","handleCancel","isDeposit","useState","isLoading","setIsLoading","Form","useForm","form","visible","onOk","validateFields","then","values","data","amount","onSuccessCb","resetFields","onFailedCb","catch","info","console","log","onCancel","okText","closable","maskClosable","confirmLoading","cancelButtonProps","disabled","centered","layout","name","autoComplete","Item","rules","required","message","validator","addonBefore","addonAfter","Text","TransferForm","fromAccountName","fee","useWatch","from","to","mark","Account","handleSubmitDeposit","handleSubmitWithdraw","handleSubmitTransfer","setIsModalVisible","isTransferModalVisible","setIsTransferModalVisible","setIsDeposit","showModal","deposit","setTimeout","handleCancelTransfer","Fragment","payload","newPayload","headStyle","actions","PlusOutlined","MinusOutlined","SwapOutlined","column","label","Button","Create","NewAccountForm","Content","App","currentAddress","setCurrentAddress","setFee","myAccounts","setMyAccounts","isCreateAccountModalVisible","setIsCreateAccountModalVisible","bank","setBank","dai","setDai","isEnableListener","useRef","showCreateAccountModal","handleSubmitCreateAccount","successCb","failedCb","loading","methods","createAccount","send","on","error","errMsg","JSON","parse","transactionHash","destroy","success","getMyAccounts","current","window","ethereum","web3","Web3","request","method","currentProvider","approve","_address","utils","toWei","withdraw","transfer","eth","net","getId","networkId","bankData","Bank","networks","bankContract","Contract","abi","call","result","transferFee","daiTokenData","DaiToken","daiContract","useEffect","onAccountChanged","accounts","removeListener","ContentComponent","Boolean","description","direction","maxWidth","map","item","i","fromWei","RocketTwoTone","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ffdbec8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Layout } from \"antd\";\nconst { Footer: FooterComponent } = Layout;\n\nconst Footer = () => {\n  return (\n    <FooterComponent\n      style={{\n        textAlign: \"center\",\n      }}\n    >\n      10X BANK (BLOCKCAMP) ©2022 Created by CHANATIP R.\n    </FooterComponent>\n  );\n};\n\nexport default Footer;\n","import \"./Header.css\";\nimport React from \"react\";\nimport { Layout, Button, Typography, Tooltip } from \"antd\";\nimport { WalletOutlined, RocketFilled } from \"@ant-design/icons\";\nconst { Title } = Typography;\nconst { Header: HeaderComponent } = Layout;\n\nconst Header = ({ onConnectWallet = () => {}, address = null }) => {\n  return (\n    <HeaderComponent\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        textAlign: \"center\",\n      }}\n    >\n      <Title\n        level={3}\n        style={{ color: \"white\", textAlign: \"center\", margin: 0 }}\n      >\n        <RocketFilled className=\"rocket\" />\n        10X Bank\n      </Title>\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        size=\"large\"\n        icon={<WalletOutlined />}\n        onClick={address ? null : onConnectWallet}\n      >\n        {address ? (\n          <Tooltip\n            title={<span style={{ fontSize: 12 }}>{address}</span>}\n            color=\"#545476\"\n            placement=\"bottomRight\"\n          >\n            <span style={{ fontWeight: \"bold\" }}>{`0x...${address.slice(\n              address.length - 4\n            )}`}</span>\n          </Tooltip>\n        ) : (\n          \"Connect Wallet\"\n        )}\n      </Button>\n    </HeaderComponent>\n  );\n};\n\nexport default Header;\n","const amountValidator = (balance) => (_, value) => {\n  const currentAmount = Number(value) || 0;\n  if (currentAmount >= 0 && currentAmount <= Number(balance)) {\n    return Promise.resolve();\n  } else {\n    return Promise.reject(\"Insufficient Balance\");\n  }\n};\n\nexport { amountValidator };\n","import React, { useState } from \"react\";\nimport { Input, Form, Modal } from \"antd\";\nimport { amountValidator } from \"../../utils\";\n\nconst DepositWithdrawForm = ({\n  accountName,\n  isModalVisible,\n  handleOk,\n  handleCancel,\n  isDeposit,\n  balance,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const onSubmit = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        setIsLoading(true);\n        handleOk({\n          data: { accountName, amount: values.amount },\n          onSuccessCb: () => {\n            setIsLoading(false);\n            form.resetFields();\n          },\n          onFailedCb: () => {\n            setIsLoading(false);\n          },\n        });\n      })\n      .catch((info) => {\n        console.log(\"Validate Failed:\", info);\n      });\n  };\n\n  const onCancel = () => {\n    handleCancel();\n    form.resetFields();\n  };\n\n  return (\n    <Modal\n      title={isDeposit ? \"Deposit\" : \"Withdraw\"}\n      visible={isModalVisible}\n      onOk={onSubmit}\n      onCancel={onCancel}\n      okText=\"Confirm\"\n      closable={false}\n      maskClosable={false}\n      confirmLoading={isLoading}\n      cancelButtonProps={{ disabled: isLoading }}\n      centered\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"depositWithdrawForm\"\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          name=\"amount\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the amount!\",\n            },\n            isDeposit\n              ? {}\n              : {\n                  message: \"Insufficient Balance!\",\n                  validator: amountValidator(balance),\n                },\n          ]}\n        >\n          <Input addonBefore=\"Amount\" addonAfter={\"DAI\"} type=\"number\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default DepositWithdrawForm;\n","import React, { useState } from \"react\";\nimport { Input, Form, Modal, Typography } from \"antd\";\nimport { amountValidator } from \"../../utils\";\nconst { Text } = Typography;\n\nconst TransferForm = ({\n  fromAccountName,\n  isModalVisible,\n  handleOk,\n  handleCancel,\n  fee,\n  balance,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [form] = Form.useForm();\n  const amount = Form.useWatch(\"amount\", form);\n\n  const onSubmit = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        setIsLoading(true);\n        handleOk({\n          data: {\n            from: fromAccountName,\n            to: values.accountName,\n            amount: values.amount,\n          },\n          onSuccessCb: () => {\n            setIsLoading(false);\n            form.resetFields();\n          },\n          onFailedCb: () => {\n            setIsLoading(false);\n          },\n        });\n      })\n      .catch((info) => {\n        console.log(\"Validate Failed:\", info);\n      });\n  };\n\n  const onCancel = () => {\n    handleCancel();\n    form.resetFields();\n  };\n\n  return (\n    <Modal\n      title=\"Transfer\"\n      visible={isModalVisible}\n      onOk={onSubmit}\n      onCancel={onCancel}\n      closable={false}\n      maskClosable={false}\n      confirmLoading={isLoading}\n      cancelButtonProps={{ disabled: isLoading }}\n      centered\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"newAccountForm\"\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          name=\"accountName\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the name!\",\n            },\n          ]}\n        >\n          <Input addonBefore=\"Account Name\" />\n        </Form.Item>\n        <Form.Item\n          name=\"amount\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the amount!\",\n            },\n            {\n              message: \"Insufficient Balance!\",\n              validator: amountValidator(balance),\n            },\n          ]}\n        >\n          <Input addonBefore=\"Amount\" addonAfter={\"DAI\"} type=\"number\" />\n        </Form.Item>\n      </Form>\n\n      <br />\n      <br />\n      <div>\n        <Text mark>{`Fee ${fee}% = ${\n          (Number(amount) || 0) * (fee / 100)\n        } DAI | Receive ${\n          (Number(amount) || 0) - (Number(amount) || 0) * (fee / 100)\n        } DAI`}</Text>\n      </div>\n      <div>\n        <Text type=\"warning\">No Fee if you transfer to your account</Text>\n      </div>\n    </Modal>\n  );\n};\n\nexport default TransferForm;\n","import \"./Account.css\";\nimport React, { useState } from \"react\";\nimport { Card, Descriptions } from \"antd\";\nimport { PlusOutlined, MinusOutlined, SwapOutlined } from \"@ant-design/icons\";\nimport DepositWithdrawForm from \"../Form/DepositWithdrawForm\";\nimport TransferForm from \"../Form/TransferForm\";\n\nconst Account = ({\n  name = \"\",\n  balance = \"\",\n  handleSubmitDeposit = () => {},\n  handleSubmitWithdraw = () => {},\n  handleSubmitTransfer = () => {},\n  fee,\n}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isTransferModalVisible, setIsTransferModalVisible] = useState(false);\n  const [isDeposit, setIsDeposit] = useState(true);\n\n  const showModal = (deposit = false) => {\n    setIsDeposit(deposit);\n\n    setTimeout(() => {\n      setIsModalVisible(true);\n    }, 300);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const submitDeposit = (payload) => {\n    const newPayload = {\n      ...payload,\n      onSuccessCb: () => {\n        payload.onSuccessCb();\n        handleCancel();\n      },\n      onFailedCb: () => {\n        payload.onFailedCb();\n        handleCancel();\n      },\n    };\n    isDeposit\n      ? handleSubmitDeposit(newPayload)\n      : handleSubmitWithdraw(newPayload);\n  };\n\n  const showTransferModal = () => {\n    setIsTransferModalVisible(true);\n  };\n\n  const handleCancelTransfer = () => {\n    setIsTransferModalVisible(false);\n  };\n\n  const submitTransfer = (payload) => {\n    const newPayload = {\n      ...payload,\n      onSuccessCb: () => {\n        payload.onSuccessCb();\n        handleCancelTransfer();\n      },\n      onFailedCb: () => {\n        payload.onFailedCb();\n        handleCancelTransfer();\n      },\n    };\n    handleSubmitTransfer(newPayload);\n  };\n\n  return (\n    <React.Fragment>\n      <DepositWithdrawForm\n        isDeposit={isDeposit}\n        accountName={name}\n        isModalVisible={isModalVisible}\n        handleOk={submitDeposit}\n        handleCancel={handleCancel}\n        balance={balance}\n      />\n\n      <TransferForm\n        fromAccountName={name}\n        isModalVisible={isTransferModalVisible}\n        handleOk={submitTransfer}\n        handleCancel={handleCancelTransfer}\n        fee={fee}\n        balance={balance}\n      />\n      <Card\n        title=\"Card\"\n        size=\"small\"\n        headStyle={{ display: \"none\" }}\n        actions={[\n          <span className=\"action\" onClick={() => showModal(true)}>\n            <PlusOutlined className=\"icon\" />\n            Deposit\n          </span>,\n          <span className=\"action\" onClick={() => showModal()}>\n            <MinusOutlined className=\"icon\" />\n            Withdraw\n          </span>,\n          <span className=\"action\" onClick={showTransferModal}>\n            <SwapOutlined className=\"icon transfer-icon\" />\n            Transfer\n          </span>,\n        ]}\n      >\n        <Descriptions title=\"\" column={1}>\n          <Descriptions.Item label=\"Account name\">{name}</Descriptions.Item>\n          <Descriptions.Item label=\"Balance\">{balance} DAI</Descriptions.Item>\n        </Descriptions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Account;\n","import Create from \"./Create/Create\";\n\nconst Button = {\n  Create,\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst Create = ({ onClick }) => {\n  return (\n    <Button type=\"primary\" onClick={onClick}>\n      <PlusOutlined />\n      Create\n    </Button>\n  );\n};\n\nexport default Create;\n","import React, { useState } from \"react\";\nimport { Input, Form, Modal } from \"antd\";\n\nconst NewAccountForm = ({ isModalVisible, handleOk, handleCancel }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const onSubmit = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        setIsLoading(true);\n        handleOk(\n          values.accountName,\n          () => {\n            setIsLoading(false);\n            form.resetFields();\n          },\n          () => {\n            setIsLoading(false);\n          }\n        );\n      })\n      .catch((info) => {\n        console.log(\"Validate Failed:\", info);\n      });\n  };\n\n  const onCancel = () => {\n    handleCancel();\n    form.resetFields();\n  };\n\n  return (\n    <Modal\n      title=\"Create new account\"\n      visible={isModalVisible}\n      onOk={onSubmit}\n      onCancel={onCancel}\n      okText=\"Create\"\n      closable={false}\n      maskClosable={false}\n      confirmLoading={isLoading}\n      cancelButtonProps={{ disabled: isLoading }}\n      centered\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"newAccountForm\"\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          name=\"accountName\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the name!\",\n            },\n          ]}\n        >\n          <Input addonBefore=\"Account Name\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default NewAccountForm;\n","import \"./App.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Space, Layout, Empty, Typography, message, Result } from \"antd\";\nimport { RocketTwoTone } from \"@ant-design/icons\";\nimport Web3 from \"web3\";\n\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\nimport Account from \"./components/Account/Account\";\nimport Button from \"./components/Button\";\nimport NewAccountForm from \"./components/Form/NewAccountForm\";\n\nimport Bank from \"./abis/Bank.json\";\nimport DaiToken from \"./abis/DaiToken.json\";\n\nconst { Title } = Typography;\nconst { Content } = Layout;\n\nconst App = () => {\n  const [currentAddress, setCurrentAddress] = useState(null);\n  const [fee, setFee] = useState(1);\n  const [myAccounts, setMyAccounts] = useState([]);\n  const [isCreateAccountModalVisible, setIsCreateAccountModalVisible] =\n    useState(false);\n\n  const [bank, setBank] = useState(null);\n  const [dai, setDai] = useState(null);\n\n  const isEnableListener = useRef(true);\n\n  const showCreateAccountModal = () => {\n    setIsCreateAccountModalVisible(true);\n  };\n\n  const handleSubmitCreateAccount = async (\n    accountName,\n    successCb,\n    failedCb\n  ) => {\n    message.loading(\"Creating new account\");\n    try {\n      await bank.methods\n        .createAccount(accountName)\n        .send()\n        .on(\"error\", (error) => {\n          failedCb();\n          const errObj = JSON.parse(error.message.slice(49, -1));\n          const errMsg = errObj.value.data.message.slice(50);\n          message.error(errMsg, 4);\n        })\n        .on(\"transactionHash\", (transactionHash) => {\n          console.log(\"===>\", { transactionHash });\n          message.destroy();\n          message.success(\"Account created!\", 2.5);\n          setTimeout(async () => {\n            setIsCreateAccountModalVisible(false);\n            successCb();\n            await getMyAccounts(currentAddress);\n          }, 2500);\n        });\n    } catch (error) {\n      console.log(\"catch error => \", { error });\n    }\n  };\n\n  const handleCancelCreateAccount = () => {\n    setIsCreateAccountModalVisible(false);\n  };\n\n  const onConnectWallet = async () => {\n    isEnableListener.current = false;\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      const [address] = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      message.success(\"Wallet connected!\", 2.5);\n      setMyAccounts([]);\n      setCurrentAddress(address);\n      getMyAccounts(address);\n      console.log(\"current address =====> \", address);\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n  };\n\n  const handleSubmitDeposit = async ({ data, onSuccessCb, onFailedCb }) => {\n    message.loading(\"Deposit in progress\");\n\n    try {\n      await dai.methods\n        .approve(bank._address, Web3.utils.toWei(data.amount, \"ether\"))\n        .send();\n\n      await bank.methods\n        .deposit(Web3.utils.toWei(data.amount, \"ether\"), data.accountName)\n        .send()\n        .on(\"error\", (error) => {\n          onFailedCb();\n          const errObj = JSON.parse(error.message.slice(49, -1));\n          const errMsg = errObj.value.data.message.slice(50);\n          message.error(errMsg, 4);\n        })\n        .on(\"transactionHash\", async (transactionHash) => {\n          console.log(\"===>\", { transactionHash });\n          message.destroy();\n          message.success(\"Deposit completed!\", 2.5);\n          setTimeout(async () => {\n            onSuccessCb();\n            await getMyAccounts(currentAddress);\n          }, 2500);\n        });\n    } catch (error) {\n      console.log(\"catch error => \", { error });\n    }\n  };\n\n  const handleSubmitWithdraw = async ({ data, onSuccessCb, onFailedCb }) => {\n    message.loading(\"Withdraw in progress\");\n\n    try {\n      await bank.methods\n        .withdraw(Web3.utils.toWei(data.amount, \"ether\"), data.accountName)\n        .send()\n        .on(\"error\", (error) => {\n          onFailedCb();\n          const errObj = JSON.parse(error.message.slice(49, -1));\n          const errMsg = errObj.value.data.message.slice(50);\n          message.error(errMsg, 4);\n        })\n        .on(\"transactionHash\", async (transactionHash) => {\n          console.log(\"===>\", { transactionHash });\n          message.destroy();\n          message.success(\"Withdraw completed!\", 2.5);\n          setTimeout(async () => {\n            onSuccessCb();\n            await getMyAccounts(currentAddress);\n          }, 2500);\n        });\n    } catch (error) {\n      console.log(\"catch error => \", { error });\n    }\n  };\n\n  const handleSubmitTransfer = async ({ data, onSuccessCb, onFailedCb }) => {\n    message.loading(\"Transfer in progress\");\n    console.log(data);\n\n    try {\n      await bank.methods\n        .transfer(data.from, data.to, Web3.utils.toWei(data.amount, \"ether\"))\n        .send()\n        .on(\"error\", (error) => {\n          onFailedCb();\n          const errObj = JSON.parse(error.message.slice(49, -1));\n          const errMsg = errObj.value.data.message.slice(50);\n          message.error(errMsg, 4);\n        })\n        .on(\"transactionHash\", async (transactionHash) => {\n          console.log(\"===>\", { transactionHash });\n          message.destroy();\n          message.success(\"Transfer completed!\", 2.5);\n          setTimeout(async () => {\n            onSuccessCb();\n            await getMyAccounts(currentAddress);\n          }, 2500);\n        });\n    } catch (error) {\n      console.log(\"catch error => \", { error });\n    }\n  };\n\n  const getMyAccounts = async (address) => {\n    const networkId = await window.web3.eth.net.getId();\n    const bankData = Bank.networks[networkId];\n\n    if (bankData) {\n      let bankContract;\n      if (bank && address === currentAddress) {\n        bankContract = bank;\n      } else {\n        bankContract = new web3.eth.Contract(Bank.abi, bankData.address, {\n          from: address,\n        });\n        setBank(bankContract);\n      }\n      console.log({ bankContract });\n      try {\n        const result = await bankContract.methods.getMyAccounts().call();\n        const transferFee = await bankContract.methods.fee().call();\n        setMyAccounts(result);\n        setFee(transferFee);\n      } catch (error) {}\n    } else {\n      console.log(\"Bank contract not deployed on detected network\");\n    }\n    //------------------------\n    const daiTokenData = DaiToken.networks[networkId];\n\n    if (daiTokenData) {\n      let daiContract;\n      if (dai && address === currentAddress) {\n        daiContract = dai;\n      } else {\n        daiContract = new web3.eth.Contract(\n          DaiToken.abi,\n          daiTokenData.address,\n          {\n            from: address,\n          }\n        );\n        setDai(daiContract);\n      }\n      console.log({ daiContract });\n    } else {\n      console.log(\"Dai contract not deployed on detected network\");\n    }\n  };\n\n  useEffect(() => {\n    const onAccountChanged = async (accounts) => {\n      if (\n        isEnableListener.current &&\n        accounts.length > 0 &&\n        accounts[0] !== currentAddress\n      ) {\n        console.log(\"onAccountChanged\");\n        onConnectWallet();\n      } else {\n        setCurrentAddress(null);\n      }\n    };\n\n    window.ethereum && window.ethereum.on(\"accountsChanged\", onAccountChanged);\n    return () => {\n      isEnableListener.current = true;\n      window.ethereum &&\n        window.ethereum.removeListener(\"accountsChanged\", onAccountChanged);\n    };\n  }, [currentAddress]);\n\n  const ContentComponent = () => {\n    return Boolean(myAccounts.length === 0) ? (\n      <Empty description=\"No Account\" className=\"empty\">\n        <Button.Create onClick={showCreateAccountModal} />\n      </Empty>\n    ) : (\n      <Space\n        direction=\"vertical\"\n        size=\"middle\"\n        style={{ display: \"flex\", maxWidth: 450, margin: \"0 auto\" }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Title level={5} style={{ textAlign: \"center\", margin: 0 }}>\n            My accounts\n          </Title>\n          <Button.Create onClick={showCreateAccountModal} />\n        </div>\n        {myAccounts.map((item, i) => {\n          return (\n            <Account\n              key={i}\n              name={item.name}\n              fee={fee}\n              balance={Web3.utils.fromWei(item.balance, \"ether\")}\n              handleSubmitDeposit={handleSubmitDeposit}\n              handleSubmitWithdraw={handleSubmitWithdraw}\n              handleSubmitTransfer={handleSubmitTransfer}\n            />\n          );\n        })}\n      </Space>\n    );\n  };\n\n  return (\n    <Layout className=\"layout\">\n      <NewAccountForm\n        isModalVisible={isCreateAccountModalVisible}\n        handleOk={handleSubmitCreateAccount}\n        handleCancel={handleCancelCreateAccount}\n      />\n      <Header onConnectWallet={onConnectWallet} address={currentAddress} />\n      <Content className=\"content\">\n        {Boolean(currentAddress) ? (\n          <ContentComponent />\n        ) : (\n          <Result\n            className=\"welcome\"\n            icon={<RocketTwoTone />}\n            title=\"Welcome, getting start by connect your wallet!\"\n          />\n        )}\n      </Content>\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}